services:
  d3-db:
    build:
      context: .
      dockerfile: db/Dockerfile.pgvectorscale
      args:
        CACHE_BUSTER: ${CACHE_BUSTER_VAR:-none}
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER:-ai}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ai}
      POSTGRES_DB: ${DB_NAME:-ai}
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: ${DB_USER:-ai}
      DB_PASS: ${DB_PASSWORD:-ai}
      DB_DATABASE: ${DB_NAME:-ai}
      WAIT_FOR_DB: "True"
      PRINT_ENV_ON_LOAD: "True"
    networks:
      - d3-network

  d3-backend:
    build:
      context: ./backend
      dockerfile: docker/Dockerfile_dev
    image: ${IMAGE_NAME:-d3-backend}:${IMAGE_TAG:-latest}
    env_file:
      - ./backend/.env
    # command override removed; using Dockerfile ENTRYPOINT and CMD
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src:/app
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DB_HOST: d3-db
      DB_PORT: 5432
      DB_USER: ${DB_USER:-ai}
      DB_PASS: ${DB_PASSWORD:-ai}
      DB_DATABASE: ${DB_NAME:-ai}
      WAIT_FOR_DB: "True"
      PRINT_ENV_ON_LOAD: "True"
    networks:
      - d3-network
    depends_on:
      - d3-db
    extra_hosts:
      - "host.docker.internal:host-gateway"

  d3-frontend:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile_dev
    image: ${IMAGE_NAME:-d3-frontend}:${IMAGE_TAG:-latest}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    networks:
      - d3-network
    depends_on:
      - d3-backend

networks:
  d3-network:

volumes:
  pgdata: