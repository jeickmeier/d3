# Stage 1: Builder
FROM node:22-alpine AS builder

# Install pnpm globally but clean npm cache afterward
RUN npm install -g pnpm && npm cache clean --force

# Set working directory
WORKDIR /app

# Copy package.json and pnpm-lock.yaml (if available)
COPY package.json ./

# Install all dependencies (including devDependencies for build)
RUN pnpm install

# Copy the rest of the application code
COPY . .

# Build the Next.js application
RUN pnpm build

# Stage 2: Production
FROM node:22-alpine

# Set working directory
WORKDIR /app

# Install pnpm globally but clean npm cache afterward
RUN npm install -g pnpm && npm cache clean --force

# Copy package.json and pnpm-lock.yaml
COPY package.json ./

# Install only production dependencies
RUN pnpm install --prod

# Copy built artifacts from the builder stage
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public

EXPOSE 3000

ENV NODE_ENV = production

CMD ["pnpm", "run", "start"]
