services:
  d3-db:
    container_name: d3-db
    build:
      context: .
      dockerfile: db/Dockerfile.pgvectorscale
      args:
        CACHE_BUSTER: ${CACHE_BUSTER_VAR:-none}
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER:-ai}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ai}
      POSTGRES_DB: ${DB_NAME:-ai}
      # Pass DB_HOST, DB_PORT, etc. to the extension script
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: ${DB_USER:-ai}
      DB_PASS: ${DB_PASSWORD:-ai}
      DB_DATABASE: ${DB_NAME:-ai}
      WAIT_FOR_DB: "True"
      PRINT_ENV_ON_LOAD: "True"
    networks:
      - d3-network

  d3-backend:
    container_name: d3-backend
    build:
      context: ./backend
      dockerfile: docker/Dockerfile_prod
    image: ${IMAGE_NAME:-d3-backend}:${IMAGE_TAG:-latest}
    env_file:
      - ./backend/.env
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src:/app
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DB_HOST: d3-db
      DB_PORT: 5432
      DB_USER: ${DB_USER:-ai}
      DB_PASS: ${DB_PASSWORD:-ai}
      DB_DATABASE: ${DB_NAME:-ai}
      WAIT_FOR_DB: "True"
      PRINT_ENV_ON_LOAD: "True"
    networks:
      - d3-network
    depends_on:
      - d3-db
    extra_hosts:
      - "host.docker.internal:host-gateway"

  d3-frontend:
    container_name: d3-frontend
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile_prod
    image: ${IMAGE_NAME:-d3-frontend}:${IMAGE_TAG:-latest}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    networks:
      - d3-network
    depends_on:
      - d3-backend

  d3-minio:
    image: minio/minio:latest
    container_name: d3-minio-server          
    ports:
      - "9000:9000"  # API port for S3 clients
      - "9001:9001"  # MinIO Console (web UI) port
    volumes:
      - minio_data:/data # Persist MinIO data using a named volume
    environment:
      MINIO_ROOT_USER: minioadmin123 
      MINIO_ROOT_PASSWORD: K8x#mP9vL2@nQ5 
      # MINIO_DOMAIN: minio # Optional: if you want to access it via http://minio:9000 from other containers
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - d3-network


networks:
  d3-network:

volumes:
  pgdata:
  minio_data: {}